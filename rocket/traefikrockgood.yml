version: "3.3"
services:
  traefik:
    image: traefik
    command: 
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmmode=true"
      - "--providers.docker.network=traefik-net"
      - "--entrypoints.web.address=:80"
    networks:
      - traefik-net
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      placement:
        constraints: [node.role==manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api.rule=Host(`traefik.oninhome.io`)"
        - "traefik.http.routes.api.service=api@internal" #Aqui no se que posa de que es per a que el dashboard pugui accedir a la api
  
  db:
    image: mongo:4.4.4
    volumes:
      - mongo-db:/data/db
      - mongo-dump:/dump
    networks:
      - backend-net
    command: mongod  --oplogSize 128 --replSet rs0 

  rocket:
    image: rocket.chat:3.11.2
    networks:
      - traefik-net
      - backend-net
    depends_on:
      - db
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.rocket.rule=Host(`rocket.traefik.oninhome.io`)"
        - "traefik.http.routers.rocket.entrypoints=web"
        - "traefik.http.services.rocket.loadbalancer.server.port=3000"
      placement:
        constraints: [node.role==worker]
    environment:
      - MONGO_URL="mongodb://db:27017/rocketchat"
      #- ROOT_URL="http://rocket.traefik.oninhome.io/rocketchat"
      - PORT="3000"

#mongo-init-replica:
 # image: mongo:4.0
 # command: bash -c "for i in `seq 1 30`; do  mongo mongo/rocketchat --eval \"rs.initiate({_id: 'rs0',members: [ { _id: 0, host: 'localhost:27017' } ]})\" && s=$$? && break || s=$$?; echo \"Tried $$i times. Waiting 5 secs...\"; sleep 5; done; (exit $$s)"
 # depends_on:
 #   - mongo

networks:
  traefik-net:
    external: true
  backend-net:
    external: true

volumes:
  mongo-db:
    external: false
  mongo-dump:
    external: false
